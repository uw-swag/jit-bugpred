{
  "NAM": "SIM",
  "NUM": "NUM",
  "None": "None",
  "OPE": "INF",
  "STR": "STR",
  "and_expr": "",
  "and_test": "",
  "arglist": "METHOD_INVOCATION_ARGUMENTS",
  "argument": "METHOD_INVOCATION_ARGUMENTS",
  "arith_expr": "",
  "assert_stmt": "AssertStatement",
  "atom": "",
  "atom_expr": "MethodInvocation",
  "classdef": "",
  "comp_if": "",
  "comp_op": "",
  "comparison": "",
  "decorated": "",
  "decorator": "",
  "decorators": "",
  "del_stmt": "",
  "dictorsetmaker": "",
  "dotted_as_name": "",
  "dotted_as_names": "",
  "dotted_name": "QualifiedName",
  "except_clause": "CatchClause",
  "expr": "",
  "expr_stmt": "ExpressionStatement",
  "exprlist": "",
  "factor": "",
  "file_input": "",
  "for_stmt": "ForStatement",
  "funcdef": "MethodDeclaration",
  "global_stmt": "",
  "if_stmt": "IfStatement",
  "import_as_name": "ImportDeclaration",
  "import_as_names": "ImportDeclaration",
  "import_from": "ImportDeclaration",
  "import_name": "ImportDeclaration",
  "lambdef": "LambdaExpression",
  "name": "SimpleName",
  "not_test": "",
  "number": "NumberLiteral",
  "operator": "INFIX_EXPRESSION_OPERATOR",
  "or_test": "",
  "param": "",
  "parameters": "MethodRefParameter",
  "power": "MethodRefParameter",
  "raise_stmt": "ThrowStatement",
  "return_stmt": "ReturnStatement",
  "shift_expr": "",
  "simple_stmt": "FieldDeclaration",
  "sliceop": "",
  "string": "StringLiteral",
  "strings": "StringLiteral",
  "subscript": "",
  "subscriptlist": "",
  "suite": "",
  "sync_comp_for": "",
  "term": "",
  "test": "",
  "testlist": "",
  "testlist_comp": "",
  "testlist_star_expr": "",
  "trailer": "",
  "try_stmt": "TryStatement",
  "while_stmt": "WhileStatement",
  "with_item": "",
  "with_stmt": "",
  "xor_expr": "",
  "yield_expr": "",
  "string <STR>": "StringLiteral <STR>",
  "name <NAM>": "SimpleName <SIM>",
  "operator <OPE>": "INFIX_EXPRESSION_OPERATOR <INF>",
  "number <NUM>": "NumberLiteral <NUM>"
}